{
  "comments": [
    {
      "key": {
        "uuid": "0e739913_f61b2140",
        "filename": "src/robinhood/rbh_find.c",
        "patchSetId": 1
      },
      "lineNbr": 478,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2017-07-10T14:31:30Z",
      "side": 1,
      "message": "I know it was broken before your change (probably due to automatic code reindentation), but you could adopt a more readable indentation at least for the added lines (e.g. 1 line per option, or 1 line per output line...)",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58b64eb9_b6ac2add",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2017-07-10T14:27:18Z",
      "side": 1,
      "message": "2 variables with almost the same name (print_char and printchar) is confusing and can lead to coding errors.",
      "range": {
        "startLine": 219,
        "startChar": 13,
        "endLine": 219,
        "endChar": 23
      },
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0a7e3e4_0bf54220",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2017-07-10T14:38:25Z",
      "side": 1,
      "message": "Oops. I wanted to change them, and forgot... Will push a new version.",
      "parentUuid": "58b64eb9_b6ac2add",
      "range": {
        "startLine": 219,
        "startChar": 13,
        "endLine": 219,
        "endChar": 23
      },
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79290eaa_2031d223",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2017-07-10T14:27:18Z",
      "side": 1,
      "message": "rh_strncpy macro does this.",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99e3b8ea_3bcf41e1",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2017-07-10T14:38:25Z",
      "side": 1,
      "message": "Ok.",
      "parentUuid": "79290eaa_2031d223",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db725ce_d4bef4b0",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2017-07-10T14:27:18Z",
      "side": 1,
      "message": "Is it safe to printf(print_char) instead of printf(\"%c\", print_char)?\nActually, I don\u0027t find where/when it is displayed. What is the directive in that case?",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cd7004_2a033e92",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2017-07-10T14:38:25Z",
      "side": 1,
      "message": "Hm. printf should handle any non-zero and non-% character as-is (man 3 printf: ordinary characters (not %), which are copied unchanged to the output stream) ; but you are right to notice at least % needs special handling (appending %% to format string instead of %)\nThere is no directive in that case (which is why we do not change chunk-\u003edirective, or complain if it is already set)\n\nI could have done everything with %c and putting the char value in sub_directive but I would rather not split the format string into more chunks than necessary as I think it can get slow if we have many chunks.\n\nI will just fix the \u0027%\u0027 case, and add it to the tests",
      "parentUuid": "2db725ce_d4bef4b0",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b00a8c64_4d188bbf",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 250,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2017-07-10T14:27:18Z",
      "side": 1,
      "message": "Can this be used directly as %z in command line?",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc0a4252_5527c1de",
        "filename": "src/robinhood/rbh_find_printf.c",
        "patchSetId": 1
      },
      "lineNbr": 250,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2017-07-10T14:38:25Z",
      "side": 1,
      "message": "No, we do not handle %z in extract_chunk. You would get \"Error: unrecognized format %z\" (line 531)",
      "parentUuid": "b00a8c64_4d188bbf",
      "revId": "f0bfc3a4c7166b6962f6a581aa451527c8263313",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}