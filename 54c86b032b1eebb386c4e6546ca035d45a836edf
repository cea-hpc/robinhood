{
  "comments": [
    {
      "key": {
        "uuid": "2676f804_2147ba09",
        "filename": "src/include/backend.h",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "+1 to versionning this somehow (maybe in struct backend itself and not this op)",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45e16291_ce497822",
        "filename": "src/include/backend.h",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "(haven\u0027t seen that discussed yet, so troll inc) would use fini or finish for function name, exit feels too strong?",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec8bcca5_1bd38e6b",
        "filename": "src/include/backend.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "Are all backends supposed to add a pointer here? that sounds odd to me, I\u0027d put that in some mongodb backend header.\n(oh, I see it in patchset 1 now, you just move it haha :D)",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1179ce38_2695b6b3",
        "filename": "src/include/filter.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "(continuation from patchset2) argument of separate alloc isn\u0027t very convincing when you need to do that here.. :)",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10c093b1_a076f07e",
        "filename": "src/include/filter.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "Feels one step too far, wouldn\u0027t `struct filter *filters` be enough? Can\u0027t be filters[] as the size is variable with dangling values.",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2730fc26_9f347ee0",
        "filename": "src/include/fsentry.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "Where does the name hydrate come from? It\u0027s documented below but feels cryptic :)",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae3e93dc_54398670",
        "filename": "src/include/fsentry.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "uuid_t is something very specific, isn\u0027t it? (unsigned char[16] on my system)\n16 bytes is just 2 uint64, that feels small -- lustre fid just fits... if you know it\u0027s lustre and use lu_fid struct.\nSomething more generic e.g. vfs file handle for lustre is size(4)+type(4)+32 bytes, so far from fitting.",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "807baa66_ebe5de1b",
        "filename": "src/src/filter.c",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2018-02-14T15:55:53Z",
      "side": 1,
      "message": "You can avoid such a big switch by defining a static array like:\n  static const enum filter_operator fop_negate[] \u003d {\n      [FOP_EQUAL] \u003d FOP_NOT_EQUAL,\n      [FOP_NOT_EQUAL] \u003d FOP_EQUAL,\n      ...\n  }\n\nThen this function simply becomes:\n\n   filter-\u003eop \u003d fop_negate[filter-\u003eop];\n\nThis is also more efficient (1 adressing vs. multiple tests)",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2af1d7e_455b03a1",
        "filename": "src/src/filter.c",
        "patchSetId": 3
      },
      "lineNbr": 118,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2018-02-15T08:23:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "807baa66_ebe5de1b",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36dcb03e_8bd4da75",
        "filename": "src/src/filter.c",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "(opinion inc) that comment isn\u0027t necessary if there is no code at all.\nintentional fallthrough need documenting if there is some code AND you want to execute the next case anyway",
      "range": {
        "startLine": 174,
        "startChar": 17,
        "endLine": 174,
        "endChar": 46
      },
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ac73f90_4a4e0ae9",
        "filename": "src/src/mongodb.c",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2018-02-14T15:55:53Z",
      "side": 1,
      "message": "the same, this can be simplified as\n\nreturn fop_str[operator];\n\nwith\n\n  fop_str[] \u003d {\n      [FOP_EQUAL] \u003d \"$eq\",\n      [FOP_NOT_EQUAL] \u003d \"$ne\",\n      ...\n  }",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91f59e35_917e0aaa",
        "filename": "src/src/mongodb.c",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2018-02-15T08:23:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ac73f90_4a4e0ae9",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97496c81_d1dbc2b0",
        "filename": "src/src/mongodb.c",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2018-02-14T15:55:53Z",
      "side": 1,
      "message": "per-se?",
      "range": {
        "startLine": 159,
        "startChar": 17,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1ffdb30_84f8fcf4",
        "filename": "src/src/mongodb.c",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2018-02-15T08:23:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97496c81_d1dbc2b0",
      "range": {
        "startLine": 159,
        "startChar": 17,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dfec448_3cbf7001",
        "filename": "src/src/mongodb.c",
        "patchSetId": 3
      },
      "lineNbr": 376,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2018-02-14T15:55:53Z",
      "side": 1,
      "message": "Much hardcoded things here :-(\n\nA preliminary enhancement could be to define an array of attributes {name, expected bson type, offset of target field in stat, ...} and replace this big \"if, else if, else if, else if\" by searching the right string in the array (or even better, in a hash table).\n\nIdeally, as discussed wed. morning, this set of attributes would be declared by a POSIX-specific module.",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d63952f9_d7a36d23",
        "filename": "src/tests/test_filter_and.c",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2018-02-14T15:55:53Z",
      "side": 1,
      "message": "(style) line over 80 char",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6694053f_face0c02",
        "filename": "src/tests/test_filter_and.c",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2018-02-15T08:23:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d63952f9_d7a36d23",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5bb9b5c_23378a02",
        "filename": "src/tests/test_filter_and.c",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2018-02-19T19:44:23Z",
      "side": 1,
      "message": "oh, I guess the school of not truncating long strings isn\u0027t universal... :)",
      "parentUuid": "6694053f_face0c02",
      "revId": "54c86b032b1eebb386c4e6546ca035d45a836edf",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}