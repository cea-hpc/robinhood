# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General
{
	fs_path = $RH_ROOT;
	fs_type = $FS_TYPE;
}

# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog
{
    # 1 MDT block for each MDT :
    MDT
    {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    force_polling = TRUE;
    polling_interval = 1s;
}

ListManager
{
	MySQL
	{
		server = "localhost";
		db = $RH_DB;
		user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        engine = InnoDB;
	}

	SQLite {
	        db_file = "/tmp/robinhood_sqlite_db" ;
        	retry_delay_microsec = 1000 ;
	}
}

FS_Scan {
	scan_interval = 100;
}

# for tests with backup purpose
backup_config
{
    root = "/tmp/backend";
    mnt_type=ext4;
    check_mounted = FALSE;
    recovery_action = common.copy;
}
# for tests with shook purpose
shook_config
{
    root = "/tmp/backend";
    mnt_type=ext4;
    check_mounted = FALSE;
    recovery_action = common.copy;
}


# "legacy policies"
%include "$RBH_TEST_POLICIES"
# alert policy definition
%include "../../../doc/templates/includes/alerts.inc"

# define common alert rules for all log* tests
fileclass file1 { definition { name == "file.1" } }
fileclass file2 { definition { name == "file.2" } }

### Alerts specification
alert_rules {
    # don't check entries more frequently than daily
    ignore { last_check < 1d }
    # don't check entries while they are modified
    ignore { last_mod < 1h }

    rule raise_alert {
        ## HERE, list all fileclasses that must raise an alert:
        target_fileclass = file1;
        target_fileclass = file2;

        # customize alert title:
        action_params { title = "entry matches '{fileclass}' ({rule})"; }

        # apply to all matching fileclasses in the policy scope
        condition = true;
    }

    # clear alert status
    rule default {
        action = none;
        action_params { alert = clear; }
        # apply to all entries that don't match 'alert_check'
        condition = true;
    }
}
