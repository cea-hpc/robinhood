{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_6e901844",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2016-04-20T13:06:04Z",
      "side": 1,
      "message": "(style) missing blank line",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8e735c15",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2016-04-20T13:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baa041b7_6e901844",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_ae774039",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2016-04-20T13:06:04Z",
      "side": 1,
      "message": "Can you wrap this into another function?",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_ae7860f3",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2016-04-20T13:50:15Z",
      "side": 1,
      "message": "Not sure I see the point given there\u0027s no logic here at all and execute_shell_command will still need to check return values, print error etc.\n\nAfraid I can\u0027t think of any better way to wrap this though, but making another function with a shorter name just because the glib function\u0027s name is long doesn\u0027t quite appeal to me.",
      "parentUuid": "baa041b7_ae774039",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_296faac6",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 248,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2016-04-21T06:41:24Z",
      "side": 1,
      "message": "shorter name and error conversion. I\u0027m ok with this version but I would find a wrapper nicer.",
      "parentUuid": "baa041b7_ae7860f3",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f1bf4bf9",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1003874
      },
      "writtenOn": "2016-04-28T08:24:42Z",
      "side": 1,
      "message": "On Centos66, glib2-2.28.8:\nrbh_cmd.c:245: error: \u0027G_CONVERT_ERROR_NO_MEMORY\u0027 undeclared (first use in this function)\nrbh_cmd.c:245: error: (Each undeclared identifier is reported only once\nrbh_cmd.c:245: error: for each function it appears in.)",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_0e9d0c59",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2016-04-20T13:06:04Z",
      "side": 1,
      "message": "(defect) we still hold two references on ctx here",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_ce696427",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2016-04-20T13:50:15Z",
      "side": 1,
      "message": "ctx is local to this function and doesn\u0027t mean anything if we return, doesn\u0027t it?\n\n(happy to move the calls higher with g_io_channel_set_close_on_unref though, that won\u0027t have the problem)",
      "parentUuid": "baa041b7_0e9d0c59",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_0d898f26",
        "filename": "src/common/rbh_cmd.c",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1003528
      },
      "writtenOn": "2016-04-21T06:41:24Z",
      "side": 1,
      "message": "ok, \"defect\" was too strong here, but conceptually I quite disklike it (not future proof, likely to fail if dynamic allocations introduced somewhere in ctx). Please move that above the ctx_incref() calls.",
      "parentUuid": "baa041b7_ce696427",
      "revId": "14f508b930531c3ea8c349b37e909680fbc5ee5e",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}