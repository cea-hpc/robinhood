# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

%include "common.conf"

fileclass class1a {
    definition { name == "*1a" }
    migration_action_params { prio = 4; }
}
fileclass class1b {
    definition { name == "*1b" }
    migration_action_params { prio = 5; }
    purge_action_params { arg = 55; }
}

fileclass class2 {
    definition { name == "*2" }
    migration_action_params { cos = 4; }
}
fileclass class3 {
    definition { name == "*3" }
}

migration_parameters {
    # override policy default_action with a cmd
    action = cmd("lfs hsm_archive -a '{archive_id}' '/mnt/lustre/.lustre/fid/{fid}' --data 'cos={cos}'");
    # default action params for the policy
    action_params {
        archive_id = 1;
        cos = 1;
        status = "{lhsm.status}";
        status2 = "{status}";
        prev_arch = "{lhsm.archive_id}";
        prev_arch2 = "{archive_id}";
    }
}

migration_rules {
    rule migr1 {
        target_fileclass = class1a;
        target_fileclass = class1b;
        condition { last_mod > 1 }
        # rule-specific action cmd
        action = cmd("lfs hsm_archive -a '{archive_id}' '{fullpath}' --data 'cos={cos},class={fileclass}'");
        action_params { cos = 2; }
    }

    rule migr2 {
        target_fileclass = class2;
        condition { last_mod > 1 }
        # rule-specific action function
        action = lhsm.archive;
        action_params { cos = 3; }
    }

    rule migr3 {
        target_fileclass = class3;
        condition { last_mod > 1 }
        # use default policy action
        action_params {
            archive_id = 2; # override policy default
            mode = over1; # override trigger param
        }
    }

    rule default {
        condition { last_mod > 1 }
        action_params {
            mode = over2; # override trigger param
        }
    }
}

migration_trigger {
    trigger_on = periodic;
    check_interval = 10s;
    action_params { mode = trigger; }
}

purge_parameters {
    # keep default policy action
    # default action params
    action_params { arg = 1; }
}

purge_rules {
    rule purge1 {
        target_fileclass = class1a;
        target_fileclass = class1b;
        action = cmd("rm -f '{fullpath}'");
        action_params { arg = 2; }
        condition { last_access > 1 }
    }
    rule purge2 {
        target_fileclass = class2;
        action = cmd("echo '{fid}' '{rule}' '{arg}' >> /tmp/purge.log");
        action_params { arg = 3; }
        condition { last_access > 1 }
    }
    rule purge3 {
        target_fileclass = class3;
        condition { last_access > 1 }
    }
    rule default {
        action = cmd("echo '{fid}' '{rule}' '{arg}' >> /tmp/purge.log");
        action_params { arg = 4; }
        condition { last_access > 1 }
    }
}

# trigger purge on OST if its usage exceeds 85%
purge_trigger {
    trigger_on         = OST_usage ;
    high_threshold_pct = 85% ;
    low_threshold_pct  = 80% ;
    check_interval     = 5min ;

    action_params {
        arg = 66;
        mode = trigger;
    }
}
