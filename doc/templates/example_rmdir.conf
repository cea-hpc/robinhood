# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General {
	fs_path = /mnt/lustre;
	fs_type = lustre;
}

#### policy definitions ####

# include template policy definitions for removing directories
%include "includes/rmdir.inc"

#### fileclasses definition ####

fileclass empty_dir {
    definition { type == directory and dircount == 0 }
}

fileclass batch_dir {
    definition { type == directory
                 and path == "/mnt/lustre/jobs/*/batch.*" }
}

fileclass tmp_dirs {
    definition { type == directory
                 and name == "tmp.*" }
}

fileclass log_dirs {
    definition { type == directory
                 and path == "/mnt/lustre/system/logs/node*" }
}
  

############# rmdir rules ############

rmdir_parameters {
    lru_sort_attr = none;
}

rmdir_trigger {
    trigger_on = periodic;
    check_interval = 1h;
}

rmdir_rules {
    # preserve root directories
    ignore { depth < 4 }

    # remove empty directories after 30d
    rule rmdir_empty {
        target_fileclass = empty_dir;
        action = common.rmdir;

        condition { last_mod > 30d }
    }

    # remove some directories recursively after 1d
    rule rmdir_recurse1d {
        target_fileclass = batch_dir;
        target_fileclass = tmp_dirs;
        action = cmd("rm -rf {fullpath}");

        condition { last_mod > 1d }
    }

    # remove some other directories after 30d
    rule rmdir_recurse30d {
        target_fileclass = log_dirs;
        action = cmd("rm -rf {fullpath}");

        condition { last_mod > 30d }
    }
}

########### end of policy rules ############


# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog {
    # 1 MDT block for each MDT :
    MDT {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    polling_interval = 1s;
}

Log {
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = "/var/log/robinhood/lustre.log";

    # File for reporting purge events
    report_file = "/var/log/robinhood/lustre_actions.log";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/var/log/robinhood/lustre_alerts.log";
    alert_show_attrs = yes;
}

ListManager {
	MySQL {
		server = "localhost";
		db = "robinhood_lustre";
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        engine = innodb;
	}
}
