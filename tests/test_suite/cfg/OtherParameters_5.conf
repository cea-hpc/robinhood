# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General
{
	fs_path = $RH_ROOT;
	fs_type = $FS_TYPE;
}

# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog
{
    # 1 MDT block for each MDT :
    MDT
    {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    force_polling = TRUE;
    polling_interval = 1s;
}

Log
{
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = stdout;

    # File for reporting purge events
    report_file = "/dev/null";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/dev/null";

}

ListManager
{
	MySQL
	{
		server = "localhost";
		db = $RH_DB;
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        engine = InnoDB;
	}
}

# for tests with backup purpose
backup_config
{
    root = "/tmp/backend";
    mnt_type=ext4;
    check_mounted = FALSE;
    recovery_action = common.copy;
}
# for tests with shook purpose
shook_config
{
    root = "/tmp/backend";
    mnt_type=ext4;
    check_mounted = FALSE;
    recovery_action = common.copy;
}


FS_Scan
{
    min_scan_interval = 3sec;
    max_scan_interval = 10sec;

    spooler_check_interval = 1s;
}

%include "$RBH_TEST_POLICIES"

purge_trigger
{
    trigger_on = global_usage;
    high_threshold_pct = 100%;
    low_threshold_pct = 99%;
    check_interval = 5sec;
}

purge_rules {
    rule default {condition {last_mod > 1 }}
}
