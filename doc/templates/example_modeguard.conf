# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General {
	fs_path = /mnt/lustre;
	fs_type = lustre;
}

#### policy definitions ####

# include template for modeguard
%include "includes/modeguard.inc"

# Make modeguard enforce setgid bit on directories.
# Directory setgid is inherited from parent but a user or some copy
# tool might remove it. This is just an example, you can easily
# modify the set/clear masks below using the octal notation.
#
modeguard_config {
        set_mask = "2000";
#        clear_mask = "0002";
}

#### fileclass definitions ####
#
# fileclasses to display in reports (can still be used in policies)
FileClass empty_files {
    definition { type == file and size == 0 }
    # report = yes (default)
}
FileClass small_files {
    definition { type == file and size > 0 and size <= 16MB }
    # report = yes (default)
}
FileClass std_files {
    definition { type == file and size > 16MB and size <= 1GB }
}
FileClass big_files {
    definition { type == file and size > 1GB }
}

FileClass f1 {
    definition { type == file and name == "file.1" }
}

FileClass f2 {
    definition { type == file and name == "file.2" }
}

############# modeguard rules ############

modeguard_rules {
    ignore_fileclass = f1;
    
    rule default {
        condition { modeguard.status != ok }
    }
}

# Run often, using Lustre changelogs is recommended.
modeguard_trigger {
    trigger_on = scheduled;
    check_interval = 1h;
}

########### end of policy rules ############

# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog {
    # 1 MDT block for each MDT :
    MDT {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    polling_interval = 1s;
}

Log {
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = "/var/log/robinhood/lustre.log";

    # File for reporting purge events
    report_file = "/var/log/robinhood/lustre_actions.log";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/var/log/robinhood/lustre_alerts.log";
    alert_show_attrs = yes;
}

ListManager {
	MySQL {
		server = "localhost";
		db = "robinhood_lustre";
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        engine = innodb;
	}
}
