# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General {
	fs_path = /mnt/lustre;
	fs_type = lustre;
}

#### policy definitions ####

# include template for alerts
%include "includes/alerts.inc"

#### fileclass definitions ####

FileClass small_files {
    definition { type == file and size > 0 and size <= 16MB }
    # report = yes (default)
}
FileClass std_files {
    definition { type == file and size > 16MB and size <= 1GB }
}
FileClass big_files {
    definition { type == file and size > 1GB }
}

FileClass largedir {
    definition { type == directory and dircount > 10000 }
}

FileClass f1 {
    definition { type == file and name == "file.1" }
}

FileClass f2 {
    definition { type == file and name == "file.2" }
}

### Alerts specification 
alert_rules {
    # don't check entries more frequently than daily
    ignore { last_check < 1d }
    # don't check entries while they are modified
    ignore { last_mod < 1h }

    rule raise_alert {
        ## List all fileclasses that would raise alerts HERE:
        target_fileclass = f1;
        target_fileclass = f2;
        target_fileclass = largedir;

        # customize alert title:
        action_params { title = "entry matches '{fileclass}' ({rule})"; }

        # apply to all matching fileclasses in the policy scope
        condition = true;
    }

    # clear alert status
    rule default {
        action = none;
        action_params { alert = clear; }
        # apply to all entries that don't match 'raise_alert'
        condition = true;
    }
}

# trigger alert check hourly
alert_trigger {
    trigger_on = periodic;
    check_interval = 1h;
}

########### end of policy rules ############

# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog {
    # 1 MDT block for each MDT :
    MDT {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    polling_interval = 1s;
}

Log {
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = "/var/log/robinhood/lustre.log";

    # File for reporting purge events
    report_file = "/var/log/robinhood/lustre_actions.log";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/var/log/robinhood/lustre_alerts.log";
    alert_show_attrs = yes;
}

ListManager {
	MySQL {
		server = "localhost";
		db = "robinhood_lustre";
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        engine = innodb;
	}
}
