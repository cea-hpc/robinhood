%include "common.conf"

fileclass file1 {
    definition { name == "file*1" }
}
fileclass file2 {
    definition { name == "file*2" }
}
fileclass file3 {
    definition { name == "file*3" }
}
fileclass file4 {
    definition { name == "file*4" }
}

migration_trigger {
    trigger_on = periodic;
    check_interval = 5s;
}

migration_parameters {
    schedulers = $sched;
    recheck_ignored_entries = true;

    pre_sched_match  = $pre_sched;
    post_sched_match = $post_sched;

    # not really a limit... just make sure pre/post/check is taken into
    # account
    max_per_run {
        max_count = 1000;
        max_vol   = 1TB;
    }
}

migration_rules {
    rule all {
    target_fileclass = file1;
    target_fileclass = file2;
    target_fileclass = file3;
    target_fileclass = file4;

    # depth can't be translated to a DB request
    # so we are sure to need matching in the program
    # for this criteria
    condition { last_mod >= 12h and depth == 0 }
    action_params {class = "{fileclass}";}
    }
}

# this second policy is to check the behavious for a single POSIX attr
define_policy cleanup {
    scope { type != directory }
    status_manager = none;
    default_action = common.unlink;
    default_lru_sort_attr = last_access;
}

cleanup_rules {
    rule default {condition {last_mod >= 12h}}
}

cleanup_trigger {
    trigger_on = periodic;
    check_interval = 5s;
}

cleanup_parameters {
    schedulers = $sched;
    recheck_ignored_entries = true;

    pre_sched_match  = $pre_sched;
    post_sched_match = $post_sched;

    # not really a limit... just make sure pre/post/check is taken into
    # account
    max_per_run {
        max_count = 1000;
        max_vol   = 1TB;
    }
}
